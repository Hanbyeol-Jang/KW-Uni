


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             pr2, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         Start
    5 00000000 E3A0000A        MOV              r0, #10     ;r0=10
    6 00000004 E3A0100B        MOV              r1, #11     ;r1=11
    7 00000008 E3A0200C        MOV              r2, #12     ;r2=12
    8 0000000C E3A0300D        MOV              r3, #13     ;r3=13
    9 00000010 E3A0400E        MOV              r4, #14     ;r4=14
   10 00000014 E3A0500F        MOV              r5, #15     ;r5=15
   11 00000018 E3A06010        MOV              r6, #16     ;r6=16
   12 0000001C E3A07011        MOV              r7, #17     ;r7=17
   13 00000020         
   14 00000020 E3A090A0        MOV              r9,#160     ;r9=160
   15 00000024         
   16 00000024 E59FC0A4        LDR              r12, Address1 ;load Address1 to
                                                             r12
   17 00000028         
   18 00000028 E9AD00FF        STMFA            sp!,{r0-r7} ;store r0-r7 into s
                                                            tack by full ascend
                                                            ing and update up 
   19 0000002C         
   20 0000002C EAFFFFFF        B                doRegister  ;enter into functio
                                                            n doRegister
   21 00000030         
   22 00000030         doRegister
   23 00000030 E2800000        ADD              r0, r0, #0  ; r0=r0+0
   24 00000034 E2811001        ADD              r1, r1, #1  ; r1=r1+1
   25 00000038 E2822002        ADD              r2, r2, #2  ; r2=r2+2
   26 0000003C E2833003        ADD              r3, r3, #3  ; r3=r3+3
   27 00000040 E2844004        ADD              r4, r4, #4  ; r4=r4+4
   28 00000044 E2855005        ADD              r5, r5, #5  ; r5=r5+5
   29 00000048 E2866006        ADD              r6, r6, #6  ; r6=r6+6
   30 0000004C E2877007        ADD              r7, r7, #7  ; r7=r7+7
   31 00000050         
   32 00000050 E0808001        ADD              r8, r0, r1  ; r8=r0+r1
   33 00000054 E0888002        ADD              r8, r8, r2  ; r8=r0+r1+r2
   34 00000058 E0888003        ADD              r8, r8, r3  ; r8=r0+r1+r2+r3
   35 0000005C E0888004        ADD              r8, r8, r4  ; r8=r0+r1+r2+r3+r4
                                                            
   36 00000060 E0888005        ADD              r8, r8, r5  ; r8=r0+r1+r2+r3+r4
                                                            +r5
   37 00000064 E0888006        ADD              r8, r8, r6  ; r8=r0+r1+r2+r3+r4
                                                            +r5+r6
   38 00000068 E0888007        ADD              r8, r8, r7  ; r8=r0+r1+r2+r3+r4
                                                            +r5+r6+r7
   39 0000006C         
   40 0000006C EAFFFFFF        B                doGCD       ; enter into functi
                                                            on doGCD
   41 00000070         
   42 00000070         doGCD
   43 00000070 E1580009        CMP              r8,r9       ; if(r8 > r9)
   44 00000074 C0488009        SUBGT            r8,r8,r9    ; r8=r8-r9
   45 00000078 B0499008        SUBLT            r9,r9,r8    ; else if(r8 <r9) r
                                                            9=r9-r8
   46 0000007C 1AFFFFFB        BNE              doGCD       ; if(r8 != r9), ent
                                                            er into function do
                                                            GCD again
   47 00000080         



ARM Macro Assembler    Page 2 


   48 00000080 EAFFFFFF        B                Finish
   49 00000084         
   50 00000084         Finish
   51 00000084 E83D0800        LDMFA            sp!,{r11}   ; load 17
   52 00000088 E087700B        ADD              r7,r7,r11   ; r7 = r7+17
   53 0000008C E83D0800        LDMFA            sp!,{r11}   ; load 16
   54 00000090 E086600B        ADD              r6,r6,r11   ; r6 = r6+16
   55 00000094 E83D0800        LDMFA            sp!,{r11}   ; load 15
   56 00000098 E085500B        ADD              r5,r5,r11   ; r5 = r5+15
   57 0000009C E83D0800        LDMFA            sp!,{r11}   ; load 14
   58 000000A0 E084400B        ADD              r4,r4,r11   ; r4 = r4+14
   59 000000A4 E83D0800        LDMFA            sp!,{r11}   ; load 13
   60 000000A8 E083300B        ADD              r3,r3,r11   ; r3 = r3+13
   61 000000AC E83D0800        LDMFA            sp!,{r11}   ; load 12
   62 000000B0 E082200B        ADD              r2,r2,r11   ; r2 = r2+12
   63 000000B4 E83D0800        LDMFA            sp!,{r11}   ; load 11
   64 000000B8 E081100B        ADD              r1,r1,r11   ; r1 = r1+11
   65 000000BC E83D0800        LDMFA            sp!,{r11}   ; load 10
   66 000000C0 E080000B        ADD              r0,r0,r11   ; r0 = r0+10
   67 000000C4         
   68 000000C4 E48C9004        STR              r9,[r12],#4 ; store r9 into r12
                                                            
   69 000000C8 E9AC00FF        STMFA            r12!,{r0-r7} ; store r0-r7 in t
                                                            o stack by full asc
                                                            ending and update s
                                                            p
   70 000000CC         
   71 000000CC E1A0F00E        MOV              pc, lr
   72 000000D0         
   73 000000D0 00040000 
                       Address1
                               &                &00040000   ;Address1=40000
   74 000000D4                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\p2.d -o.\objects\p2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5
\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION S
ETA 524" --list=.\listings\p2.lst p2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Address1 000000D0

Symbol: Address1
   Definitions
      At line 73 in file p2.s
   Uses
      At line 16 in file p2.s
Comment: Address1 used once
Finish 00000084

Symbol: Finish
   Definitions
      At line 50 in file p2.s
   Uses
      At line 48 in file p2.s
Comment: Finish used once
Start 00000000

Symbol: Start
   Definitions
      At line 4 in file p2.s
   Uses
      None
Comment: Start unused
doGCD 00000070

Symbol: doGCD
   Definitions
      At line 42 in file p2.s
   Uses
      At line 40 in file p2.s
      At line 46 in file p2.s

doRegister 00000030

Symbol: doRegister
   Definitions
      At line 22 in file p2.s
   Uses
      At line 20 in file p2.s
Comment: doRegister used once
pr2 00000000

Symbol: pr2
   Definitions
      At line 1 in file p2.s
   Uses
      None
Comment: pr2 unused
6 symbols
338 symbols in table
