module _8_to_1_MUX(a, b, c, d, e, f, g, h, sel, d_out);
	input [31:0] a, b, c, d, e, f, g, h;
	input [2:0] sel;
	output reg[31:0] d_out;
	
	always @(sel, a, b, c, d, e, f, g, h) begin
		case(sel)
			3'b000
			
			
			
			
		endcase
	end
endmodule

module read_operation(Addr, Data, from_reg0, from_reg1, from_reg2,
							from_reg3, from_reg4, from_reg5, from_reg6, from_reg7);

	input [31:0] from_reg0, from_reg1, from_reg2, from_reg3, from_reg4, from_reg5, from_reg6, from_reg7;
	input [2:0] Addr;
	output [31:0] Data;
	
	wire [31:0] data_wire;
	wire [31:0] ff_wire;
	
	
endmodule
